<!DOCTYPE html>
<html lang="en" data-theme="dark">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>mlvs.me Dashboard â€” <%= page.charAt(0).toUpperCase()+page.slice(1) %></title>
  <meta name="description" content="Ultra-modern Discord bot dashboard with advanced glassmorphism design and real-time analytics" />
  <meta name="robots" content="noindex, nofollow" />
  
  <link rel="stylesheet" href="/style.css" />
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link href="https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&family=Space+Grotesk:wght@300..700&family=JetBrains+Mono:ital,wght@0,100..800;1,100..800&display=swap" rel="stylesheet" />
  
  <style>
    /* ==== ULTRA-MODERN DASHBOARD GLASSMORPHISM DESIGN - 2024+ ==== */
    
    :root {
      /* Next-gen color system with semantic meanings */
      --primary-50: #f0f9ff;
      --primary-100: #e0f2fe;
      --primary-200: #bae6fd;
      --primary-300: #7dd3fc;
      --primary-400: #38bdf8;
      --primary-500: #0ea5e9;
      --primary-600: #0284c7;
      --primary-700: #0369a1;
      --primary-800: #075985;
      --primary-900: #0c4a6e;
      --primary-950: #082f49;
      
      --purple-400: #c084fc;
      --purple-500: #a855f7;
      --purple-600: #9333ea;
      --purple-700: #7c3aed;
      
      --emerald-400: #34d399;
      --emerald-500: #10b981;
      --emerald-600: #059669;
      
      --orange-400: #fb923c;
      --orange-500: #f97316;
      --orange-600: #ea580c;
      
      --pink-400: #f472b6;
      --pink-500: #ec4899;
      --pink-600: #db2777;
      
      --red-400: #f87171;
      --red-500: #ef4444;
      --red-600: #dc2626;
      
      --yellow-400: #fbbf24;
      --yellow-500: #f59e0b;
      --yellow-600: #d97706;
      
      /* Ultra-modern glassmorphism system */
      --glass-ultra: rgba(15, 23, 42, 0.8);
      --glass-strong: rgba(15, 23, 42, 0.9);
      --glass-light: rgba(255, 255, 255, 0.05);
      --glass-medium: rgba(255, 255, 255, 0.08);
      --glass-heavy: rgba(255, 255, 255, 0.12);
      --glass-border: rgba(148, 163, 184, 0.2);
      --glass-border-strong: rgba(148, 163, 184, 0.3);
      --glass-border-light: rgba(148, 163, 184, 0.1);
      
      /* Advanced shadow system */
      --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
      --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
      --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
      --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
      --shadow-2xl: 0 25px 50px -12px rgb(0 0 0 / 0.25);
      --shadow-glow: 0 0 40px rgba(14, 165, 233, 0.3);
      --shadow-glow-purple: 0 0 40px rgba(168, 85, 247, 0.3);
      --shadow-glow-success: 0 0 40px rgba(16, 185, 129, 0.3);
      --shadow-glow-danger: 0 0 40px rgba(239, 68, 68, 0.3);
      
      /* Typography scale - modern proportions */
      --text-xs: 0.75rem;     /* 12px */
      --text-sm: 0.875rem;    /* 14px */
      --text-base: 1rem;      /* 16px */
      --text-lg: 1.125rem;    /* 18px */
      --text-xl: 1.25rem;     /* 20px */
      --text-2xl: 1.5rem;     /* 24px */
      --text-3xl: 1.875rem;   /* 30px */
      --text-4xl: 2.25rem;    /* 36px */
      --text-5xl: 3rem;       /* 48px */
      --text-6xl: 3.75rem;    /* 60px */
      
      /* Spacing system - perfect proportions */
      --space-1: 0.25rem;     /* 4px */
      --space-2: 0.5rem;      /* 8px */
      --space-3: 0.75rem;     /* 12px */
      --space-4: 1rem;        /* 16px */
      --space-5: 1.25rem;     /* 20px */
      --space-6: 1.5rem;      /* 24px */
      --space-8: 2rem;        /* 32px */
      --space-10: 2.5rem;     /* 40px */
      --space-12: 3rem;       /* 48px */
      --space-16: 4rem;       /* 64px */
      --space-20: 5rem;       /* 80px */
      --space-24: 6rem;       /* 96px */
      
      /* Border radius - modern curves */
      --radius-sm: 0.125rem;   /* 2px */
      --radius-base: 0.25rem;  /* 4px */
      --radius-md: 0.375rem;   /* 6px */
      --radius-lg: 0.5rem;     /* 8px */
      --radius-xl: 0.75rem;    /* 12px */
      --radius-2xl: 1rem;      /* 16px */
      --radius-3xl: 1.5rem;    /* 24px */
      --radius-4xl: 2rem;      /* 32px */
      --radius-full: 9999px;
      
      /* Animation system - buttery smooth */
      --duration-75: 75ms;
      --duration-100: 100ms;
      --duration-150: 150ms;
      --duration-200: 200ms;
      --duration-300: 300ms;
      --duration-500: 500ms;
      --duration-700: 700ms;
      --duration-1000: 1000ms;
      
      --ease-linear: linear;
      --ease-in: cubic-bezier(0.4, 0, 1, 1);
      --ease-out: cubic-bezier(0, 0, 0.2, 1);
      --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
      --ease-spring: cubic-bezier(0.175, 0.885, 0.32, 1.275);
      --ease-bounce: cubic-bezier(0.68, -0.6, 0.32, 1.6);
      
      /* Background system */
      --bg-primary: #0f172a;
      --bg-secondary: #1e293b;
      --bg-tertiary: #334155;
      
      /* Text colors */
      --text-primary: #f8fafc;
      --text-secondary: #e2e8f0;
      --text-tertiary: #cbd5e1;
      --text-muted: #94a3b8;
      --text-inverse: #0f172a;
      
      /* Status colors */
      --status-success: #10b981;
      --status-warning: #f59e0b;
      --status-danger: #ef4444;
      --status-info: #0ea5e9;
    }
    
    /* ==== GLOBAL RESET & BASE STYLES ==== */
    *, *::before, *::after {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }
    
    html {
      scroll-behavior: smooth;
      font-feature-settings: "cv02", "cv03", "cv04", "cv11";
    }
    
    body.dash-body {
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, system-ui, sans-serif;
      font-weight: 400;
      line-height: 1.6;
      color: var(--text-primary);
      background: var(--bg-primary);
      overflow-x: hidden;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
      text-rendering: optimizeLegibility;
      font-variant-numeric: tabular-nums;
    }
    
    /* ==== ULTRA-MODERN BACKGROUND SYSTEM ==== */
    body.dash-body::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: -1;
      background: 
        radial-gradient(circle at 20% 80%, rgba(14, 165, 233, 0.1) 0%, transparent 50%),
        radial-gradient(circle at 80% 20%, rgba(168, 85, 247, 0.1) 0%, transparent 50%),
        radial-gradient(circle at 40% 40%, rgba(16, 185, 129, 0.08) 0%, transparent 50%),
        linear-gradient(135deg, #0f172a 0%, #1e293b 100%);
      animation: backgroundFloat 20s ease-in-out infinite;
    }
    
    @keyframes backgroundFloat {
      0%, 100% { transform: scale(1) rotate(0deg); }
      50% { transform: scale(1.02) rotate(1deg); }
    }
    
    /* ==== ULTRA-MODERN DASHBOARD SHELL ==== */
    .dash-shell {
      display: flex;
      min-height: 100vh;
      position: relative;
    }
    
    /* ==== ADVANCED SIDEBAR ==== */
    .dash-sidebar {
      width: 280px;
      background: var(--glass-ultra);
      backdrop-filter: blur(20px);
      border-right: 1px solid var(--glass-border);
      display: flex;
      flex-direction: column;
      position: fixed;
      top: 0;
      left: 0;
      height: 100vh;
      z-index: 100;
      box-shadow: var(--shadow-xl);
      transition: all var(--duration-300) var(--ease-out);
    }
    
    .side-top {
      padding: var(--space-6);
      border-bottom: 1px solid var(--glass-border-light);
    }
    
    .brand-mini {
      display: flex;
      align-items: center;
      gap: var(--space-3);
    }
    
    .brand-mini img {
      width: 40px;
      height: 40px;
      border-radius: var(--radius-xl);
      box-shadow: var(--shadow-md);
    }
    
    .brand-text {
      font-family: 'Space Grotesk', sans-serif;
      font-size: var(--text-xl);
      font-weight: 700;
      color: var(--text-primary);
      background: linear-gradient(135deg, var(--primary-400), var(--purple-400));
      background-clip: text;
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }
    
    .side-nav {
      flex: 1;
      padding: var(--space-4) 0;
      overflow-y: auto;
      scrollbar-width: thin;
      scrollbar-color: var(--glass-border) transparent;
    }
    
    .side-nav::-webkit-scrollbar {
      width: 4px;
    }
    
    .side-nav::-webkit-scrollbar-track {
      background: transparent;
    }
    
    .side-nav::-webkit-scrollbar-thumb {
      background: var(--glass-border);
      border-radius: var(--radius-full);
    }
    
    .side-section {
      padding: var(--space-2) var(--space-6);
      margin-bottom: var(--space-6);
    }
    
    .side-label {
      font-size: var(--text-xs);
      font-weight: 600;
      color: var(--text-muted);
      text-transform: uppercase;
      letter-spacing: 0.05em;
      margin-bottom: var(--space-3);
      padding: 0 var(--space-2);
    }
    
    .side-link {
      display: block;
      padding: var(--space-3) var(--space-4);
      margin-bottom: var(--space-1);
      color: var(--text-tertiary);
      text-decoration: none;
      border-radius: var(--radius-lg);
      font-weight: 500;
      transition: all var(--duration-200) var(--ease-out);
      position: relative;
      overflow: hidden;
    }
    
    .side-link::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
      transition: left var(--duration-500) var(--ease-out);
    }
    
    .side-link:hover {
      color: var(--text-primary);
      background: var(--glass-light);
      transform: translateX(4px);
    }
    
    .side-link:hover::before {
      left: 100%;
    }
    
    .side-link.active {
      color: var(--text-primary);
      background: linear-gradient(135deg, var(--primary-600), var(--purple-600));
      box-shadow: var(--shadow-glow);
    }
    
    .side-link.active::after {
      content: '';
      position: absolute;
      top: 50%;
      right: var(--space-4);
      transform: translateY(-50%);
      width: 6px;
      height: 6px;
      background: white;
      border-radius: 50%;
      box-shadow: 0 0 10px rgba(255, 255, 255, 0.8);
    }
    
    .side-footer {
      padding: var(--space-6);
      border-top: 1px solid var(--glass-border-light);
      display: flex;
      flex-direction: column;
      gap: var(--space-4);
    }
    
    .guild-box, .token-box {
      display: flex;
      flex-direction: column;
      gap: var(--space-2);
    }
    
    .guild-box label, .token-box label {
      font-size: var(--text-xs);
      color: var(--text-muted);
      font-weight: 500;
    }
    
    #guildSelect, #apiToken {
      background: var(--glass-light);
      backdrop-filter: blur(8px);
      border: 1px solid var(--glass-border);
      border-radius: var(--radius-lg);
      padding: var(--space-2) var(--space-3);
      color: var(--text-primary);
      font-size: var(--text-sm);
      transition: all var(--duration-200) var(--ease-out);
    }
    
    #guildSelect:focus, #apiToken:focus {
      outline: none;
      border-color: var(--primary-500);
      box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.1);
    }
    
    #saveToken {
      background: linear-gradient(135deg, var(--primary-600), var(--primary-500));
      color: white;
      border: none;
      border-radius: var(--radius-lg);
      padding: var(--space-2) var(--space-4);
      font-size: var(--text-sm);
      font-weight: 600;
      cursor: pointer;
      transition: all var(--duration-200) var(--ease-out);
      box-shadow: var(--shadow-md);
    }
    
    #saveToken:hover {
      transform: translateY(-2px);
      box-shadow: var(--shadow-lg), var(--shadow-glow);
    }
    
    /* ==== ADVANCED MAIN CONTENT AREA ==== */
    .dash-main {
      flex: 1;
      margin-left: 280px;
      display: flex;
      flex-direction: column;
      min-height: 100vh;
    }
    
    /* ==== ULTRA-MODERN HEADER ==== */
    .dash2-header {
      background: var(--glass-strong);
      backdrop-filter: blur(24px);
      border-bottom: 1px solid var(--glass-border);
      padding: var(--space-4) var(--space-6);
      display: flex;
      align-items: center;
      justify-content: space-between;
      position: sticky;
      top: 0;
      z-index: 50;
      box-shadow: var(--shadow-lg);
    }
    
    .dash2-brand {
      display: flex;
      align-items: center;
      gap: var(--space-3);
    }
    
    .dash2-brand img {
      width: 32px;
      height: 32px;
      border-radius: var(--radius-lg);
      box-shadow: var(--shadow-md);
    }
    
    .dash2-title strong {
      font-family: 'Space Grotesk', sans-serif;
      font-size: var(--text-lg);
      font-weight: 700;
      color: var(--text-primary);
      display: block;
      line-height: 1.2;
    }
    
    .dash2-title span {
      font-size: var(--text-sm);
      color: var(--text-muted);
      font-weight: 500;
    }
    
    .dash2-meta {
      display: flex;
      align-items: center;
      gap: var(--space-3);
    }
    
    .badge {
      display: inline-flex;
      align-items: center;
      padding: var(--space-1) var(--space-3);
      border-radius: var(--radius-full);
      font-size: var(--text-xs);
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.05em;
      transition: all var(--duration-200) var(--ease-out);
    }
    
    .badge.green {
      background: linear-gradient(135deg, var(--emerald-500), var(--emerald-400));
      color: white;
      box-shadow: var(--shadow-glow-success);
    }
    
    .badge.red {
      background: linear-gradient(135deg, var(--red-500), var(--red-400));
      color: white;
      box-shadow: var(--shadow-glow-danger);
    }
    
    .badge:not(.green):not(.red) {
      background: var(--glass-medium);
      backdrop-filter: blur(8px);
      border: 1px solid var(--glass-border);
      color: var(--text-tertiary);
    }
    
    .btn {
      background: var(--glass-ultra);
      backdrop-filter: blur(12px);
      color: var(--text-primary);
      border: 1px solid var(--glass-border);
      border-radius: var(--radius-lg);
      padding: var(--space-2) var(--space-4);
      font-size: var(--text-sm);
      font-weight: 500;
      cursor: pointer;
      transition: all var(--duration-200) var(--ease-out);
      display: inline-flex;
      align-items: center;
      gap: var(--space-2);
      text-decoration: none;
      box-shadow: var(--shadow-sm);
    }
    
    .btn:hover {
      background: var(--glass-strong);
      border-color: var(--glass-border-strong);
      transform: translateY(-2px);
      box-shadow: var(--shadow-md);
    }
    
    .btn.small {
      padding: var(--space-1_5) var(--space-3);
      font-size: var(--text-xs);
    }
    
    .btn.primary {
      background: linear-gradient(135deg, var(--primary-600), var(--primary-500));
      color: white;
      border: none;
      box-shadow: var(--shadow-md), var(--shadow-glow);
    }
    
    .btn.primary:hover {
      transform: translateY(-3px);
      box-shadow: var(--shadow-lg), var(--shadow-glow);
    }
    
    /* ==== MODERN MAIN CONTENT ==== */
    .dash2 {
      flex: 1;
      padding: var(--space-8) var(--space-6);
      max-width: 100%;
    }
    
    /* ==== ULTRA-MODERN PANELS ==== */
    .panel {
      background: var(--glass-ultra);
      backdrop-filter: blur(20px);
      border: 1px solid var(--glass-border);
      border-radius: var(--radius-4xl);
      margin-bottom: var(--space-8);
      overflow: hidden;
      box-shadow: var(--shadow-xl);
      transition: all var(--duration-300) var(--ease-out);
      position: relative;
    }
    
    .panel::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 2px;
      background: linear-gradient(90deg, var(--primary-500), var(--purple-500), var(--emerald-500));
    }
    
    .panel:hover {
      transform: translateY(-4px);
      box-shadow: var(--shadow-2xl);
      border-color: var(--glass-border-strong);
    }
    
    .panel-head {
      padding: var(--space-6) var(--space-8);
      border-bottom: 1px solid var(--glass-border-light);
      display: flex;
      align-items: center;
      justify-content: space-between;
      background: var(--glass-light);
      backdrop-filter: blur(8px);
    }
    
    .panel-head h3 {
      font-family: 'Space Grotesk', sans-serif;
      font-size: var(--text-xl);
      font-weight: 600;
      color: var(--text-primary);
      margin: 0;
    }
    
    .panel-actions {
      display: flex;
      align-items: center;
      gap: var(--space-3);
    }
    
    /* ==== ADVANCED METRICS SYSTEM ==== */
    .metric-row {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: var(--space-6);
      padding: var(--space-8);
    }
    
    .metric-card {
      background: var(--glass-medium);
      backdrop-filter: blur(12px);
      border: 1px solid var(--glass-border-light);
      border-radius: var(--radius-3xl);
      padding: var(--space-6);
      transition: all var(--duration-300) var(--ease-out);
      position: relative;
      overflow: hidden;
    }
    
    .metric-card::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 3px;
      background: linear-gradient(90deg, var(--primary-400), var(--purple-400));
      transform: scaleX(0);
      transition: transform var(--duration-300) var(--ease-out);
    }
    
    .metric-card:hover {
      transform: translateY(-6px);
      box-shadow: var(--shadow-lg);
      border-color: var(--glass-border);
    }
    
    .metric-card:hover::before {
      transform: scaleX(1);
    }
    
    .metric-label {
      font-size: var(--text-sm);
      color: var(--text-muted);
      font-weight: 500;
      margin-bottom: var(--space-2);
      text-transform: uppercase;
      letter-spacing: 0.05em;
    }
    
    .metric-value {
      font-family: 'JetBrains Mono', monospace;
      font-size: var(--text-2xl);
      font-weight: 700;
      color: var(--text-primary);
      margin-bottom: var(--space-4);
      background: linear-gradient(135deg, var(--text-primary), var(--primary-400));
      background-clip: text;
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }
    
    /* ==== ADVANCED STATS GRID ==== */
    .dash2-row.stats {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
      gap: var(--space-4);
      padding: var(--space-8);
    }
    
    .stat {
      background: var(--glass-light);
      backdrop-filter: blur(8px);
      border: 1px solid var(--glass-border-light);
      border-radius: var(--radius-2xl);
      padding: var(--space-5);
      text-align: center;
      transition: all var(--duration-300) var(--ease-out);
      position: relative;
    }
    
    .stat:hover {
      transform: translateY(-3px);
      box-shadow: var(--shadow-md);
      background: var(--glass-medium);
    }
    
    .stat-label {
      font-size: var(--text-xs);
      color: var(--text-muted);
      font-weight: 500;
      margin-bottom: var(--space-2);
      text-transform: uppercase;
      letter-spacing: 0.05em;
    }
    
    .stat-value {
      font-family: 'JetBrains Mono', monospace;
      font-size: var(--text-lg);
      font-weight: 700;
      color: var(--text-primary);
    }
    
    /* ==== MODERN FOOTER ==== */
    .dash-footer {
      margin-top: var(--space-20);
      padding: var(--space-8) 0;
      border-top: 1px solid var(--glass-border-light);
      background: var(--glass-light);
      backdrop-filter: blur(8px);
    }
    
    .footer-row {
      display: flex;
      align-items: center;
      justify-content: space-between;
      font-size: var(--text-sm);
      color: var(--text-muted);
    }
    
    /* ==== RESPONSIVE DESIGN ==== */
    @media (max-width: 1024px) {
      .dash-sidebar {
        transform: translateX(-100%);
      }
      
      .dash-sidebar.active {
        transform: translateX(0);
      }
      
      .dash-main {
        margin-left: 0;
      }
    }
    
    @media (max-width: 768px) {
      .dash2-header {
        padding: var(--space-4);
      }
      
      .dash2 {
        padding: var(--space-6) var(--space-4);
      }
      
      .metric-row {
        grid-template-columns: 1fr;
        gap: var(--space-4);
        padding: var(--space-6);
      }
      
      .dash2-row.stats {
        grid-template-columns: repeat(2, 1fr);
        gap: var(--space-3);
        padding: var(--space-6);
      }
      
      .panel-head {
        padding: var(--space-4) var(--space-6);
        flex-direction: column;
        gap: var(--space-3);
        align-items: stretch;
      }
    }
    
    @media (max-width: 480px) {
      .dash2-meta {
        flex-direction: column;
        gap: var(--space-2);
      }
      
      .dash2-row.stats {
        grid-template-columns: 1fr;
      }
      
      .footer-row {
        flex-direction: column;
        gap: var(--space-3);
        text-align: center;
      }
    }
    
    /* ==== ACCESSIBILITY ==== */
    @media (prefers-reduced-motion: reduce) {
      *,
      *::before,
      *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
      }
    }
    
    @media (prefers-contrast: high) {
      :root {
        --glass-border: rgba(255, 255, 255, 0.8);
        --glass-border-strong: rgba(255, 255, 255, 1);
        --text-primary: #ffffff;
        --text-secondary: #f0f0f0;
        --text-tertiary: #e0e0e0;
      }
    }
    
    /* ==== UTILITY CLASSES ==== */
    .sr-only {
      position: absolute;
      width: 1px;
      height: 1px;
      padding: 0;
      margin: -1px;
      overflow: hidden;
      clip: rect(0, 0, 0, 0);
      white-space: nowrap;
      border: 0;
    }
    
    .focus-visible {
      outline: 2px solid var(--primary-400);
      outline-offset: 2px;
    }
    
    /* ==== LOADING STATES ==== */
    .loading {
      position: relative;
      overflow: hidden;
    }
    
    .loading::after {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
      animation: shimmer 1.5s ease-in-out infinite;
    }
    
    @keyframes shimmer {
      0% { left: -100%; }
      100% { left: 100%; }
    }
    
    /* ==== CUSTOM SCROLLBAR ==== */
    * {
      scrollbar-width: thin;
      scrollbar-color: var(--glass-border) transparent;
    }
    
    *::-webkit-scrollbar {
      width: 8px;
      height: 8px;
    }
    
    *::-webkit-scrollbar-track {
      background: transparent;
    }
    
    *::-webkit-scrollbar-thumb {
      background: var(--glass-border);
      border-radius: var(--radius-full);
    }
    
    *::-webkit-scrollbar-thumb:hover {
      background: var(--glass-border-strong);
    }
  </style>
</head>
<body class="dash-body">
  <div class="dash-shell" id="dashShell">
    <aside class="dash-sidebar" id="dashSidebar" aria-label="Primary Navigation" data-store="<%= sessionStoreType %>">
      <div class="side-top">
        <div class="brand-mini">
          <img src="/logo.png" alt="mlvs.me Logo" />
          <span class="brand-text">mlvs.me</span>
        </div>
      </div>
      <nav class="side-nav" aria-label="Dashboard Navigation">
        <div class="side-section">
          <div class="side-label">Analytics</div>
          <a href="/dashboard/health" class="side-link <%= page==='health'?'active':'' %>">
            <span>Health Monitor</span>
          </a>
          <a href="/dashboard/activity" class="side-link <%= page==='activity'?'active':'' %>">
            <span>Live Activity</span>
          </a>
          <a href="/dashboard/telemetry" class="side-link <%= page==='telemetry'?'active':'' %>">
            <span>Telemetry</span>
          </a>
        </div>
        <div class="side-section">
          <div class="side-label">Management</div>
          <a href="/dashboard/actions" class="side-link <%= page==='actions'?'active':'' %>">
            <span>Actions</span>
          </a>
          <a href="/dashboard/commands" class="side-link <%= page==='commands'?'active':'' %>">
            <span>Commands</span>
          </a>
          <a href="/dashboard/system" class="side-link <%= page==='system'?'active':'' %>">
            <span>System</span>
          </a>
        </div>
        <div class="side-section">
          <div class="side-label">Resources</div>
          <a href="/dashboard/about" class="side-link <%= page==='about'?'active':'' %>">
            <span>About</span>
          </a>
          <a href="/" class="side-link">
            <span>Homepage</span>
          </a>
          <a href="/api/status" class="side-link" target="_blank">
            <span>API Status</span>
          </a>
          <% if (brand.githubUrl) { %><a href="<%= brand.githubUrl %>" target="_blank" class="side-link">
            <span>GitHub</span>
          </a><% } %>
          <% if (brand.inviteUrl) { %><a href="<%= brand.inviteUrl %>" target="_blank" class="side-link">
            <span>Invite Bot</span>
          </a><% } %>
        </div>
      </nav>
      <div class="side-footer">
        <div class="guild-box">
          <label for="guildSelect">Server Selection</label>
          <select id="guildSelect">
            <option value="">All Servers</option>
          </select>
        </div>
        <div class="token-box">
          <label for="apiToken">API Authentication</label>
          <div style="display: flex; gap: var(--space-2);">
            <input id="apiToken" type="password" placeholder="Enter API token" />
            <button id="saveToken" class="btn small">Save</button>
          </div>
        </div>
        <div style="font-size: var(--text-xs); color: var(--text-muted); text-align: center;">
          Store: <%= sessionStoreType %>
        </div>
      </div>
    </aside>
    <div class="dash-main">
      <header class="dash2-header glass">
        <div class="dash2-brand">
          <img src="/logo.png" alt="mlvs.me Dashboard" />
          <div class="dash2-title">
            <strong>mlvs.me Dashboard</strong>
            <span><%= page.charAt(0).toUpperCase()+page.slice(1) %> Analytics</span>
          </div>
        </div>
        <div class="dash2-meta">
          <span id="d2Status" class="badge <%= status==='Online'? 'green':'red' %>">
            <%= status %>
          </span>
          <span class="badge" id="storeBadge">
            <%= sessionStoreType %>
          </span>
          <button id="d2Refresh" class="btn small">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M23 4v6h-6M1 20v-6h6"/>
              <path d="M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15"/>
            </svg>
            Refresh
          </button>
          <label class="btn small" style="cursor: pointer; margin: 0;">
            <input id="d2Auto" type="checkbox" checked style="margin-right: 6px;" />
            Auto-Refresh
          </label>
        </div>
      </header>
      <main id="dashContent" class="dash2">
        <%- body %>
        <footer class="footer dash-footer">
          <div class="footer-row">
            <div>
              Â© <%= new Date().getFullYear() %> mlvs.me Platform - Advanced Discord Bot Analytics
            </div>
            <div style="display:flex;gap:var(--space-2);align-items:center">
              <span class="badge <%= status==='Online'?'green':'red' %>">
                <%= status %>
              </span>
              <span class="badge">
                <%= sessionStoreType %>
              </span>
              <span style="font-size: var(--text-xs); color: var(--text-muted);">
                Last Updated: <%= new Date().toLocaleTimeString() %>
              </span>
            </div>
          </div>
        </footer>
      </main>
    </div>
  </div>
  
  <!-- Enhanced Dashboard JavaScript -->
  <script>
    // Ultra-modern dashboard interactions and real-time updates
    document.addEventListener('DOMContentLoaded', function() {
      // Enhanced auto-refresh system with visual feedback
      let autoRefreshInterval;
      const autoCheckbox = document.getElementById('d2Auto');
      const refreshBtn = document.getElementById('d2Refresh');
      const statusBadge = document.getElementById('d2Status');
      
      function startAutoRefresh() {
        if (autoRefreshInterval) clearInterval(autoRefreshInterval);
        autoRefreshInterval = setInterval(() => {
          if (autoCheckbox.checked) {
            refreshDashboard();
          }
        }, 30000); // 30 seconds
      }
      
      function refreshDashboard() {
        // Add loading state
        refreshBtn.classList.add('loading');
        refreshBtn.disabled = true;
        
        // Simulate refresh (replace with actual refresh logic)
        setTimeout(() => {
          refreshBtn.classList.remove('loading');
          refreshBtn.disabled = false;
          updateLastUpdatedTime();
        }, 1000);
      }
      
      function updateLastUpdatedTime() {
        const timeElement = document.querySelector('.footer-row span:last-child');
        if (timeElement) {
          timeElement.textContent = `Last Updated: ${new Date().toLocaleTimeString()}`;
        }
      }
      
      // Enhanced sidebar navigation with smooth transitions
      const sideLinks = document.querySelectorAll('.side-link');
      sideLinks.forEach(link => {
        link.addEventListener('mouseenter', function() {
          this.style.transform = 'translateX(8px)';
        });
        
        link.addEventListener('mouseleave', function() {
          if (!this.classList.contains('active')) {
            this.style.transform = 'translateX(0)';
          }
        });
      });
      
      // Advanced glassmorphism effects on scroll
      let scrollTimeout;
      window.addEventListener('scroll', function() {
        if (!scrollTimeout) {
          scrollTimeout = setTimeout(() => {
            const header = document.querySelector('.dash2-header');
            const panels = document.querySelectorAll('.panel');
            
            if (window.scrollY > 50) {
              header.style.backdropFilter = 'blur(30px)';
              header.style.backgroundColor = 'var(--glass-strong)';
            } else {
              header.style.backdropFilter = 'blur(24px)';
              header.style.backgroundColor = 'var(--glass-ultra)';
            }
            
            // Parallax effect for panels
            panels.forEach((panel, index) => {
              const rect = panel.getBoundingClientRect();
              const isVisible = rect.top < window.innerHeight && rect.bottom > 0;
              
              if (isVisible) {
                const scrollPercent = (window.innerHeight - rect.top) / window.innerHeight;
                const translateY = (scrollPercent - 0.5) * 10;
                panel.style.transform = `translateY(${translateY}px)`;
              }
            });
            
            scrollTimeout = null;
          }, 16);
        }
      });
      
      // Enhanced token management
      const apiTokenInput = document.getElementById('apiToken');
      const saveTokenBtn = document.getElementById('saveToken');
      
      saveTokenBtn.addEventListener('click', function() {
        const token = apiTokenInput.value.trim();
        if (token) {
          // Add success animation
          this.style.background = 'linear-gradient(135deg, var(--emerald-500), var(--emerald-400))';
          this.textContent = 'Saved!';
          
          setTimeout(() => {
            this.style.background = '';
            this.textContent = 'Save';
          }, 2000);
          
          // Store token (implement actual storage logic)
          localStorage.setItem('dashboard_token', token);
        }
      });
      
      // Load saved token
      const savedToken = localStorage.getItem('dashboard_token');
      if (savedToken) {
        apiTokenInput.value = savedToken;
      }
      
      // Enhanced metric animations
      const metricValues = document.querySelectorAll('.metric-value, .stat-value');
      const animateMetrics = () => {
        metricValues.forEach(metric => {
          if (!metric.dataset.animated) {
            const rect = metric.getBoundingClientRect();
            const isInViewport = rect.top < window.innerHeight && rect.bottom > 0;
            
            if (isInViewport) {
              metric.dataset.animated = 'true';
              metric.style.animation = 'countUp 0.8s ease-out forwards';
            }
          }
        });
      };
      
      // Intersection Observer for advanced animations
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };
      
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.style.opacity = '1';
            entry.target.style.transform = 'translateY(0)';
          }
        });
      }, observerOptions);
      
      // Observe all panels and cards
      document.querySelectorAll('.panel, .metric-card, .stat').forEach(el => {
        el.style.opacity = '0';
        el.style.transform = 'translateY(20px)';
        el.style.transition = 'all 0.6s cubic-bezier(0.4, 0, 0.2, 1)';
        observer.observe(el);
      });
      
      // Real-time status monitoring
      function updateStatus() {
        // Simulate status check (replace with actual API call)
        fetch('/api/status')
          .then(response => response.json())
          .then(data => {
            const statusBadges = document.querySelectorAll('#d2Status, .badge.green, .badge.red');
            statusBadges.forEach(badge => {
              badge.textContent = data.status || 'Online';
              badge.className = badge.className.replace(/green|red/, data.status === 'Online' ? 'green' : 'red');
            });
          })
          .catch(() => {
            // Handle error silently
          });
      }
      
      // Enhanced keyboard shortcuts
      document.addEventListener('keydown', function(e) {
        if (e.ctrlKey || e.metaKey) {
          switch(e.key) {
            case 'r':
              e.preventDefault();
              refreshDashboard();
              break;
            case 'k':
              e.preventDefault();
              document.getElementById('guildSelect').focus();
              break;
            case '/':
              e.preventDefault();
              const searchInput = document.querySelector('input[placeholder*="Filter"]');
              if (searchInput) searchInput.focus();
              break;
          }
        }
      });
      
      // Initialize systems
      startAutoRefresh();
      animateMetrics();
      updateStatus();
      
      // Progressive enhancement for mobile
      if (window.innerWidth <= 1024) {
        const sidebar = document.getElementById('dashSidebar');
        const overlay = document.createElement('div');
        overlay.className = 'sidebar-overlay';
        overlay.style.cssText = `
          position: fixed;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
          background: rgba(0, 0, 0, 0.5);
          backdrop-filter: blur(4px);
          z-index: 99;
          opacity: 0;
          visibility: hidden;
          transition: all 0.3s ease;
        `;
        
        document.body.appendChild(overlay);
        
        // Mobile sidebar toggle
        const toggleBtn = document.createElement('button');
        toggleBtn.innerHTML = 'â˜°';
        toggleBtn.className = 'mobile-toggle';
        toggleBtn.style.cssText = `
          position: fixed;
          top: 20px;
          left: 20px;
          z-index: 101;
          background: var(--glass-ultra);
          backdrop-filter: blur(12px);
          border: 1px solid var(--glass-border);
          border-radius: var(--radius-lg);
          width: 44px;
          height: 44px;
          color: var(--text-primary);
          font-size: 18px;
          cursor: pointer;
          display: flex;
          align-items: center;
          justify-content: center;
        `;
        
        document.body.appendChild(toggleBtn);
        
        toggleBtn.addEventListener('click', () => {
          sidebar.classList.toggle('active');
          overlay.style.opacity = sidebar.classList.contains('active') ? '1' : '0';
          overlay.style.visibility = sidebar.classList.contains('active') ? 'visible' : 'hidden';
        });
        
        overlay.addEventListener('click', () => {
          sidebar.classList.remove('active');
          overlay.style.opacity = '0';
          overlay.style.visibility = 'hidden';
        });
      }
      
      // Performance monitoring
      if ('performance' in window) {
        window.addEventListener('load', () => {
          setTimeout(() => {
            const perfData = performance.getEntriesByType('navigation')[0];
            if (perfData) {
              console.log('âœ… Dashboard load performance:', {
                loadTime: `${Math.round(perfData.loadEventEnd - perfData.loadEventStart)}ms`,
                domReady: `${Math.round(perfData.domContentLoadedEventEnd - perfData.domContentLoadedEventStart)}ms`
              });
            }
          }, 0);
        });
      }
    });
    
    // CSS animations for metrics
    const style = document.createElement('style');
    style.textContent = `
      @keyframes countUp {
        from {
          opacity: 0;
          transform: translateY(10px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }
      
      @keyframes pulse {
        0%, 100% { opacity: 1; }
        50% { opacity: 0.7; }
      }
      
      .loading {
        animation: pulse 1s ease-in-out infinite;
      }
    `;
    document.head.appendChild(style);
  </script>
  
  <script src="/dashboard.js" defer></script>
</body>
</html>
