<!-- Settings Page -->
<div class="dashboard-grid settings-grid">
  <div class="card" style="grid-column: 1 / -1;">
    <div class="card-header">
      <h3 class="card-title">Profile Settings</h3>
  <div class="card-icon"><span class="ui-icon" data-icon="settings"></span></div>
    </div>
    <div class="card-content">
      <form id="profile-settings" class="form-grid">
        <div class="form-field">
          <label class="form-label" for="displayName">Display Name</label>
          <input id="displayName" name="displayName" type="text" class="input" value="<%= (user && user.username) || '' %>" />
        </div>
        <div class="form-field">
          <label class="form-label" for="email">Email (optional)</label>
          <input id="email" name="email" type="email" class="input" placeholder="you@example.com" />
        </div>
        <div class="form-field full">
          <label class="form-label" for="bio">Bio</label>
          <textarea id="bio" name="bio" rows="3" class="input" placeholder="Short description..."></textarea>
        </div>
        <div class="form-actions full">
          <button type="submit" class="btn btn-primary">Save Profile</button>
        </div>
      </form>
    </div>
  </div>

  <div class="card">
    <div class="card-header">
      <h3 class="card-title">Appearance</h3>
  <div class="card-icon"><span class="ui-icon" data-icon="palette"></span></div>
    </div>
    <div class="card-content">
      <div class="form-field">
        <label class="form-label">Theme</label>
        <select id="themeSelect" class="input">
          <option value="dark" selected>Dark</option>
          <option value="light">Light</option>
          <option value="midnight">Midnight</option>
        </select>
      </div>
      <div class="form-field">
        <label class="form-label">Accent Color</label>
        <input type="color" id="accentColor" value="#2bc4ff" class="input" />
      </div>
      <button class="btn btn-secondary" id="applyTheme" type="button">Apply</button>
    </div>
  </div>

  <div class="card">
    <div class="card-header">
      <h3 class="card-title">Notifications</h3>
  <div class="card-icon"><span class="ui-icon" data-icon="bell"></span></div>
    </div>
    <div class="card-content">
      <div class="form-field">
        <label class="form-label">Email Alerts</label>
        <input type="checkbox" id="emailAlerts" /> Enable
      </div>
      <div class="form-field">
        <label class="form-label">System Messages</label>
        <input type="checkbox" id="systemMessages" checked /> Enable
      </div>
      <div class="form-field">
        <label class="form-label">Activity Digest</label>
        <select id="digestFrequency" class="input">
          <option value="off">Off</option>
          <option value="daily">Daily</option>
          <option value="weekly" selected>Weekly</option>
        </select>
      </div>
    </div>
  </div>

  <div class="card" style="grid-column: 1 / -1;">
    <div class="card-header">
      <h3 class="card-title">API & Security</h3>
  <div class="card-icon"><span class="ui-icon" data-icon="lock"></span></div>
    </div>
    <div class="card-content">
      <div class="form-field">
        <label class="form-label">API Token</label>
        <div style="display:flex; gap:.5rem; align-items:center;">
          <input type="password" id="apiTokenInput" class="input" placeholder="••••••" style="flex:1;" />
          <button class="btn btn-secondary" id="revealToken" type="button">Show</button>
          <button class="btn btn-primary" id="saveToken" type="button">Save</button>
        </div>
      </div>
      <div class="form-field">
        <label class="form-label">Regenerate Token</label>
        <button class="btn btn-secondary" id="regenToken" type="button">Regenerate</button>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const form = document.getElementById('profile-settings');
  form?.addEventListener('submit', e => {
    e.preventDefault();
    localStorage.setItem('profile_settings', JSON.stringify({
      displayName: displayName.value,
      email: email.value,
      bio: bio.value
    }));
    notify('Profile saved', 'success');
  });
  document.getElementById('applyTheme')?.addEventListener('click', () => {
    const accent = document.getElementById('accentColor').value;
    document.documentElement.style.setProperty('--neon-primary', accent);
    notify('Theme applied', 'success');
  });
  document.getElementById('revealToken')?.addEventListener('click', () => {
    const input = document.getElementById('apiTokenInput');
    input.type = input.type === 'password' ? 'text' : 'password';
  });
  document.getElementById('saveToken')?.addEventListener('click', () => {
    const token = document.getElementById('apiTokenInput').value;
    if(token) {
      localStorage.setItem('api_token', token);
      notify('Token saved', 'success');
    }
  });
  document.getElementById('regenToken')?.addEventListener('click', () => {
    const newTok = 'tok_' + Math.random().toString(36).slice(2,12);
    document.getElementById('apiTokenInput').value = newTok;
    notify('Token regenerated (remember to save)', 'info');
  });
  function notify(msg, type='info') {
    if(window.dashboard && window.dashboard.showNotification) window.dashboard.showNotification(msg, type); else console.log(msg);
  }
});
</script>

<style>
.settings-grid { align-items: start; }
.form-grid { display: grid; grid-template-columns: repeat(auto-fit,minmax(220px,1fr)); gap: 1rem 1.25rem; }
.form-field { display: flex; flex-direction: column; gap: .4rem; }
.form-field.full { grid-column: 1 / -1; }
.form-label { font-size: .65rem; font-weight:600; letter-spacing:.06em; text-transform:uppercase; color: hsl(var(--muted-foreground)); }
.input { background:hsl(var(--secondary)); border:1px solid hsl(var(--border)); color:hsl(var(--foreground)); padding:.6rem .75rem; border-radius: var(--radius); font: inherit; }
.input:focus { outline:2px solid hsl(var(--primary) / 0.6); outline-offset:2px; }
.form-actions { display:flex; justify-content:flex-end; margin-top:.5rem; }
@media (max-width: 768px){ .form-grid { grid-template-columns: 1fr; } }
/* Normalize emojis inside settings */
.settings-grid .card-icon { font-size:1.1rem; }
</style>
